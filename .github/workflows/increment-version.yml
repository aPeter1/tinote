name: Auto bump version

on:
  push:
    branches:
      - main

jobs:
  auto_bump_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install bump2version
        run: pip install bump2version

      - name: Get new tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          CURRENT_VERSION=$(grep current_version .bumpversion.cfg | awk -F ' ' '{print $3}')
          if [ "$LATEST_TAG" == "$CURRENT_VERSION" ]; then
            NEW_TAG=$(echo $LATEST_TAG | awk -F. '{printf "%d.%d.%d", $1, $2, $3+1}')
            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          else
            echo "NEW_TAG=$CURRENT_VERSION" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v3
      - name: Bump version and push tag
        uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: ${{ env.NEW_TAG }}
          tag_exists_error: true
          message: "Latest release"

#      - uses: actions/checkout@master
#
#        uses: anothrNick/github-tag-action@1.61.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}
#          REPO_OWNER: aPeter1


#
#        env:
#          GITHUB_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}
#        run: |
#          git config user.name "GitHub Actions"
#          git config user.email actions@github.com
#          bump2version --no-tag --commit patch
#          NEW_VERSION=$(cat .bumpversion.cfg | grep current_version | sed -r 's/^current_version\s*=\s*//')
#          git tag $NEW_VERSION
#          git remote set-url origin "https://${{ secrets.ACTIONS_BOT_TOKEN }}@github.com/${{ github.repository }}"
#          git push origin $NEW_VERSION